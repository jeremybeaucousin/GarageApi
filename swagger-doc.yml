swagger: '2.0'
info:
  description: >-
    This is the result implementation of the demands in the following google doc
    :
    https://docs.google.com/document/d/1G0PJb1JYzLCkyazsv6vj0p02kL6duFS7T6cUuRs25-o
  version: 1.0.0
  title: Garage API
  contact:
    email: jeremy.beaucousin@gmail.com
host: garageapi.herokuapp.com
basePath: /
tags:
  - name: garages
    description: Garage management
  - name: cars
    description: Car management
schemes:
  - http
paths:
  /garages:
    post:
      tags:
        - garages
      summary: Add a new garage
      description: ''
      operationId: addGarage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Garage to add
          required: true
          schema:
            $ref: '#/definitions/Garage'
      responses:
        '201':
          description: Created
        '400':
          description: Invalid input
        '500':
          description: Error
  '/garages/{garageId}':
    get:
      tags:
        - garages
      summary: Get and existing garage
      description: Return a single garage
      operationId: getGarage
      produces:
        - application/json
      parameters:
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Garage'
        '404':
          description: Not Found
    delete:
      tags:
        - garages
      summary: Deletes a Garage
      description: ''
      operationId: deleteGarage
      produces:
        - application/json
      parameters:
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Not Found
  '/garages/{garageId}/cars':
    post:
      tags:
        - cars
      summary: Add a car to a garage
      description: ''
      operationId: addCar
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Car to add
          required: true
          schema:
            $ref: '#/definitions/Car'
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
      responses:
        '201':
          description: Created
        '400':
          description: Invalid input
        '422':
          description: When car cannont be added
        '500':
          description: Error
    get:
      tags:
        - cars
      summary: Get all Cars in a Garage
      description: Return a cars
      operationId: getCars
      produces:
        - application/json
      parameters:
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
        - name: price
          in: query
          description: Price filter with operator 'gte:1200,lte:1500'
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Car'
        '404':
          description: Not Found
    delete:
      tags:
        - cars
      summary: Deletes all Cars in a Garage
      description: ''
      operationId: deleteCars
      produces:
        - application/json
      parameters:
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Not Found
  '/garages/{garageId}/cars/{carId}':
    put:
      tags:
        - cars
      summary: Update a car in a garage
      description: ''
      operationId: updateCar
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Car to update
          required: true
          schema:
            $ref: '#/definitions/Car'
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
        - name: carId
          in: path
          description: car identifier
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid input
        '404':
          description: Not Found
        '500':
          description: Error
    get:
      tags:
        - cars
      summary: Get a car in a Garage
      description: Return a cars
      operationId: getCar
      produces:
        - application/json
      parameters:
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
        - name: carId
          in: path
          description: car identifier
          required: true
          type: integer
          format: int64          
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Car'
        '404':
          description: Not Found
    delete:
      tags:
        - cars
      summary: Delete a car in a Garage
      description: ''
      operationId: deleteCar
      produces:
        - application/json
      parameters:
        - name: garageId
          in: path
          description: Garage identifier
          required: true
          type: integer
          format: int64
        - name: carId
          in: path
          description: car identifier
          required: true
          type: integer
          format: int64          
      responses:
        '200':
          description: successful operation
        '404':
          description: Not Found
definitions:
  Garage:
    type: object
    required:
      - name
      - address
      - creationDate
      - maxCarCapacity
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Peugeot
      address:
        type: string
        example: Fake Address
      creationDate:
        type: string
        example: '2020-01-30'
      maxCarCapacity:
        type: integer
        format: int64
  Car:
    type: object
    required:
      - licenceId
      - brand
      - model
      - price
    properties:
      id:
        type: integer
        format: int64
      licenceId:
        type: string
        example: XX-XXX-XX
      brand:
        type: string
        example: Peugeot
      model:
        type: string
        example: '206'
      price:
        type: number
        format: int64
        example: 1500.00
      garageId:
        type: integer
        format: int64
  JsonError:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
        example: An error occured
      detail:
        type: string
        example: null